# NOTE: This is the starter file, we can upload this file the first time and run certbot 
#   once the domains have been TLS certified, certbot will modify the one on server
#   uploading this file will remove TLS certificate and we'll have to re-certify
# 
# to be placed in /etc/nginx/sites-available
# symlink in /etc/nginx/sites-enabled: ln -s /etc/nginx/sites-available/michaeldang.dev.conf /etc/nginx/sites-enabled/michaeldang.dev

upstream stats {
  server 54.176.26.191:9000; # change to the correct server IP address
}
upstream orc {
  server 54.176.26.191:9400;
}

limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

# original server
server {
  listen 80;
  server_name michaeldang.dev www.michaeldang.dev 54.176.26.191;
  # server_name michaeldang.dev www.michaeldang.dev 64.23.156.94;

  root /var/www/michaeldang.dev/html;
  index index.html index.html index.nginx-debian.html;
  # access_log  /var/log/nginx/host.access.log  main;

  location / {
    limit_req zone=mylimit burst=10 nodelay;
    
    # root   /usr/share/nginx/html;
    # index  index.html index.htm;
  }

      # redirect server error pages to the static page /50x.html
  #
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
  # wordle
  location /wordle/ {
    index index.html index.html index.nginx-debian.html;
  }

  location /wordle/stats/ {
    proxy_pass http://stats/;
  }

  location /old/wordle/{  # testing the redirect page
    index index.html;
  }
}

# stats
server {
  server_name  stats.api.michaeldang.dev;

  location / {
    limit_req zone=mylimit burst=10 nodelay;
    
    proxy_pass http://stats/;
  }
}

# orc
server {
  server_name  orchestrator.api.michaeldang.dev;

  location / {
    limit_req zone=mylimit burst=10 nodelay;
    
    proxy_pass http://orc/;
  }
}